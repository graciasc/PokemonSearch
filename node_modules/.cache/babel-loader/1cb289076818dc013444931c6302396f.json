{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Projects/personal/React/PokemonSearch/src/pages/Pokemon.jsx\";\nimport React from 'react';\nimport { Segment, Loader, Dimmer, Image } from 'semantic-ui-react';\nexport default class Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      pokemon: [],\n      value: ''\n    };\n    this.search = this.search.bind(this);\n  }\n\n  search(e) {\n    // this will search the input in the this.state.data\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon');\n    const data = await response.json();\n    this.setState({\n      loading: false,\n      pokemon: data.results\n    }); // console.log(this.state.data);\n  }\n\n  render() {\n    // console.log(this.state.pokemon);\n    // console.log(this.state.isLoading); // working loading\n    // console.log(this.state.pokemon); pokemon names\n    const filterNames = this.state.pokemon.filter(search => {\n      return search.name.toLowerCase().indexOf(this.state.value.toLowerCase()) !== -1;\n    }); //search filter through pokemon Api\n\n    const loading = this.state.loading ? 'Loading' : '';\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        style: {\n          minHeight: '99vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, loading, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Pokemon\",\n        onChange: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), filterNames.map(pokemon => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" \", pokemon.name);\n      }));\n    } else {\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        content: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(Image, {\n        src: \"/images/wireframe/short-paragraph.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n/*\n render() {\n    const name = this.state.data.map((poke, i) => (\n      <li key={i}> {poke.name}</li>\n    ));\n    const loading = this.state.loading ? \"...Loading\" : name;\nconst filterPokemon = this.state.data.filter(searchedPokemon => searchedPokemon.name.indexOf(this.state.value)!== -1)\n// const showName = filterPokemon.map(item =><li>{item.name}</li>)\n// console.log(showName)\nconsole.log(this.state.value)\n    return (\n      <div className=\"App\"style={{minHeight: \"99vh\"}} >\n        <h1>Pokemon Names </h1>\n        <form>\n          <input\n          type='text'\n            placeholder=\"Search List for Pokemon\"\n            onChange={this.search}\n          />\n{loading}\n        </form>\n      </div>\n    );\n  }\n  */","map":{"version":3,"sources":["/Users/mac/Projects/personal/React/PokemonSearch/src/pages/Pokemon.jsx"],"names":["React","Segment","Loader","Dimmer","Image","Pokemon","Component","constructor","props","state","loading","pokemon","value","search","bind","e","setState","target","componentDidMount","response","fetch","data","json","results","render","filterNames","filter","name","toLowerCase","indexOf","minHeight","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,KAAlC,QAA+C,mBAA/C;AAEA,eAAe,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,MAAM,CAACE,CAAD,EAAI;AACR;AACA,SAAKC,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAEG,CAAC,CAACE,MAAF,CAASL;AADJ,KAAd;AAGD;;AAED,QAAMM,iBAAN,GAA0B;AACxB,SAAKF,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKN,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAEU,IAAI,CAACE;AAAhC,KAAd,EAJwB,CAKxB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA,UAAMC,WAAW,GAAG,KAAKhB,KAAL,CAAWE,OAAX,CAAmBe,MAAnB,CAA0Bb,MAAM,IAAI;AACtD,aACEA,MAAM,CAACc,IAAP,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkC,KAAKpB,KAAL,CAAWG,KAAX,CAAiBgB,WAAjB,EAAlC,MAAsE,CAAC,CADzE;AAGD,KAJmB,CAApB,CALO,CAUP;;AAEA,UAAMlB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC,EAAjD;;AACA,QAAI,KAAKD,KAAL,CAAWC,OAAf,EAAwB;AACtB,aACE;AAAK,QAAA,KAAK,EAAE;AAAEoB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,OADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,QAAQ,EAAE,KAAKG,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKGY,WAAW,CAACM,GAAZ,CAAgBpB,OAAO,IAAI;AAC1B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAMA,OAAO,CAACgB,IAAd,CAAP;AACD,OAFA,CALH,CADF;AAWD,KAZD,MAYO;AACH,aACF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,uCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADE;AASH;AACF;;AA7DkD;AA+DrD","sourcesContent":["import React from 'react';\nimport { Segment, Loader, Dimmer, Image } from 'semantic-ui-react';\n\nexport default class Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      pokemon: [],\n      value: ''\n    };\n    this.search = this.search.bind(this);\n  }\n\n  search(e) {\n    // this will search the input in the this.state.data\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon');\n    const data = await response.json();\n    this.setState({ loading: false, pokemon: data.results });\n    // console.log(this.state.data);\n  }\n  render() {\n    // console.log(this.state.pokemon);\n    // console.log(this.state.isLoading); // working loading\n    // console.log(this.state.pokemon); pokemon names\n\n    const filterNames = this.state.pokemon.filter(search => {\n      return (\n        search.name.toLowerCase().indexOf(this.state.value.toLowerCase()) !== -1\n      );\n    });\n    //search filter through pokemon Api\n\n    const loading = this.state.loading ? 'Loading' : '';\n    if (this.state.loading) {\n      return (\n        <div style={{ minHeight: '99vh' }}>\n          {loading}\n          <form>\n            <input type='text' placeholder='Pokemon' onChange={this.search} />\n          </form>\n          {filterNames.map(pokemon => {\n            return <li> {pokemon.name}</li>;\n          })}\n        </div>\n      );\n    } else {\n        return (\n      <Segment>\n        <Dimmer active>\n          <Loader content='Loading' />\n        </Dimmer>\n\n        <Image src='/images/wireframe/short-paragraph.png' />\n      </Segment>\n        );\n    }\n  }\n}\n/*\n render() {\n    const name = this.state.data.map((poke, i) => (\n      <li key={i}> {poke.name}</li>\n    ));\n    const loading = this.state.loading ? \"...Loading\" : name;\nconst filterPokemon = this.state.data.filter(searchedPokemon => searchedPokemon.name.indexOf(this.state.value)!== -1)\n// const showName = filterPokemon.map(item =><li>{item.name}</li>)\n// console.log(showName)\nconsole.log(this.state.value)\n    return (\n      <div className=\"App\"style={{minHeight: \"99vh\"}} >\n        <h1>Pokemon Names </h1>\n        <form>\n          <input\n          type='text'\n            placeholder=\"Search List for Pokemon\"\n            onChange={this.search}\n          />\n{loading}\n        </form>\n      </div>\n    );\n  }\n  */\n"]},"metadata":{},"sourceType":"module"}